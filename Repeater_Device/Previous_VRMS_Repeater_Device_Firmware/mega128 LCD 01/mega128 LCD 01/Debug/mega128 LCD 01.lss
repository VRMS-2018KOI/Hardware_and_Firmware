
mega128 LCD 01.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         000002be  00800100  00000854  000008c8  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000854  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      00000030  00000000  00000000  00000b86  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000bb8  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000160  00000000  00000000  00000bf4  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   000026c2  00000000  00000000  00000d54  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000bdd  00000000  00000000  00003416  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   0000106a  00000000  00000000  00003ff3  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000398  00000000  00000000  00005060  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000692  00000000  00000000  000053f8  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00001877  00000000  00000000  00005a8a  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000140  00000000  00000000  00007301  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	45 c0       	rjmp	.+138    	; 0x8c <__ctors_end>
   2:	00 00       	nop
   4:	58 c0       	rjmp	.+176    	; 0xb6 <__bad_interrupt>
   6:	00 00       	nop
   8:	56 c0       	rjmp	.+172    	; 0xb6 <__bad_interrupt>
   a:	00 00       	nop
   c:	54 c0       	rjmp	.+168    	; 0xb6 <__bad_interrupt>
   e:	00 00       	nop
  10:	52 c0       	rjmp	.+164    	; 0xb6 <__bad_interrupt>
  12:	00 00       	nop
  14:	50 c0       	rjmp	.+160    	; 0xb6 <__bad_interrupt>
  16:	00 00       	nop
  18:	4e c0       	rjmp	.+156    	; 0xb6 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	4c c0       	rjmp	.+152    	; 0xb6 <__bad_interrupt>
  1e:	00 00       	nop
  20:	4a c0       	rjmp	.+148    	; 0xb6 <__bad_interrupt>
  22:	00 00       	nop
  24:	48 c0       	rjmp	.+144    	; 0xb6 <__bad_interrupt>
  26:	00 00       	nop
  28:	46 c0       	rjmp	.+140    	; 0xb6 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	44 c0       	rjmp	.+136    	; 0xb6 <__bad_interrupt>
  2e:	00 00       	nop
  30:	42 c0       	rjmp	.+132    	; 0xb6 <__bad_interrupt>
  32:	00 00       	nop
  34:	40 c0       	rjmp	.+128    	; 0xb6 <__bad_interrupt>
  36:	00 00       	nop
  38:	3e c0       	rjmp	.+124    	; 0xb6 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	3c c0       	rjmp	.+120    	; 0xb6 <__bad_interrupt>
  3e:	00 00       	nop
  40:	3a c0       	rjmp	.+116    	; 0xb6 <__bad_interrupt>
  42:	00 00       	nop
  44:	38 c0       	rjmp	.+112    	; 0xb6 <__bad_interrupt>
  46:	00 00       	nop
  48:	36 c0       	rjmp	.+108    	; 0xb6 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	34 c0       	rjmp	.+104    	; 0xb6 <__bad_interrupt>
  4e:	00 00       	nop
  50:	32 c0       	rjmp	.+100    	; 0xb6 <__bad_interrupt>
  52:	00 00       	nop
  54:	30 c0       	rjmp	.+96     	; 0xb6 <__bad_interrupt>
  56:	00 00       	nop
  58:	2e c0       	rjmp	.+92     	; 0xb6 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	2c c0       	rjmp	.+88     	; 0xb6 <__bad_interrupt>
  5e:	00 00       	nop
  60:	2a c0       	rjmp	.+84     	; 0xb6 <__bad_interrupt>
  62:	00 00       	nop
  64:	28 c0       	rjmp	.+80     	; 0xb6 <__bad_interrupt>
  66:	00 00       	nop
  68:	26 c0       	rjmp	.+76     	; 0xb6 <__bad_interrupt>
  6a:	00 00       	nop
  6c:	24 c0       	rjmp	.+72     	; 0xb6 <__bad_interrupt>
  6e:	00 00       	nop
  70:	22 c0       	rjmp	.+68     	; 0xb6 <__bad_interrupt>
  72:	00 00       	nop
  74:	20 c0       	rjmp	.+64     	; 0xb6 <__bad_interrupt>
  76:	00 00       	nop
  78:	1e c0       	rjmp	.+60     	; 0xb6 <__bad_interrupt>
  7a:	00 00       	nop
  7c:	1c c0       	rjmp	.+56     	; 0xb6 <__bad_interrupt>
  7e:	00 00       	nop
  80:	1a c0       	rjmp	.+52     	; 0xb6 <__bad_interrupt>
  82:	00 00       	nop
  84:	18 c0       	rjmp	.+48     	; 0xb6 <__bad_interrupt>
  86:	00 00       	nop
  88:	16 c0       	rjmp	.+44     	; 0xb6 <__bad_interrupt>
	...

0000008c <__ctors_end>:
  8c:	11 24       	eor	r1, r1
  8e:	1f be       	out	0x3f, r1	; 63
  90:	cf ef       	ldi	r28, 0xFF	; 255
  92:	d0 e1       	ldi	r29, 0x10	; 16
  94:	de bf       	out	0x3e, r29	; 62
  96:	cd bf       	out	0x3d, r28	; 61

00000098 <__do_copy_data>:
  98:	13 e0       	ldi	r17, 0x03	; 3
  9a:	a0 e0       	ldi	r26, 0x00	; 0
  9c:	b1 e0       	ldi	r27, 0x01	; 1
  9e:	e4 e5       	ldi	r30, 0x54	; 84
  a0:	f8 e0       	ldi	r31, 0x08	; 8
  a2:	00 e0       	ldi	r16, 0x00	; 0
  a4:	0b bf       	out	0x3b, r16	; 59
  a6:	02 c0       	rjmp	.+4      	; 0xac <__do_copy_data+0x14>
  a8:	07 90       	elpm	r0, Z+
  aa:	0d 92       	st	X+, r0
  ac:	ae 3b       	cpi	r26, 0xBE	; 190
  ae:	b1 07       	cpc	r27, r17
  b0:	d9 f7       	brne	.-10     	; 0xa8 <__do_copy_data+0x10>
  b2:	5b d3       	rcall	.+1718   	; 0x76a <main>
  b4:	cd c3       	rjmp	.+1946   	; 0x850 <_exit>

000000b6 <__bad_interrupt>:
  b6:	a4 cf       	rjmp	.-184    	; 0x0 <__vectors>

000000b8 <LCD_DISPLAY_CLEAR>:
void LCD_SAVE_CHAR(unsigned char addr, unsigned char D[])
{
	LCD_CGRAM_ADDR(addr, 0);
	for (int i = 0; i < 8; i++)
		LCD_WRITE_DATA(D[i], 1);
}
  b8:	e0 91 02 01 	lds	r30, 0x0102	; 0x800102 <RSW>
  bc:	f0 91 03 01 	lds	r31, 0x0103	; 0x800103 <RSW+0x1>
  c0:	10 82       	st	Z, r1
  c2:	00 00       	nop
  c4:	e0 91 02 01 	lds	r30, 0x0102	; 0x800102 <RSW>
  c8:	f0 91 03 01 	lds	r31, 0x0103	; 0x800103 <RSW+0x1>
  cc:	81 e0       	ldi	r24, 0x01	; 1
  ce:	80 83       	st	Z, r24
  d0:	00 00       	nop
  d2:	00 00       	nop
  d4:	00 00       	nop
  d6:	e0 91 00 01 	lds	r30, 0x0100	; 0x800100 <DATA>
  da:	f0 91 01 01 	lds	r31, 0x0101	; 0x800101 <DATA+0x1>
  de:	80 83       	st	Z, r24
  e0:	00 00       	nop
  e2:	00 00       	nop
  e4:	e0 91 02 01 	lds	r30, 0x0102	; 0x800102 <RSW>
  e8:	f0 91 03 01 	lds	r31, 0x0103	; 0x800103 <RSW+0x1>
  ec:	10 82       	st	Z, r1
  ee:	00 00       	nop
  f0:	e0 91 00 01 	lds	r30, 0x0100	; 0x800100 <DATA>
  f4:	f0 91 01 01 	lds	r31, 0x0101	; 0x800101 <DATA+0x1>
  f8:	10 82       	st	Z, r1
  fa:	83 ef       	ldi	r24, 0xF3	; 243
  fc:	91 e0       	ldi	r25, 0x01	; 1
  fe:	01 97       	sbiw	r24, 0x01	; 1
 100:	f1 f7       	brne	.-4      	; 0xfe <LCD_DISPLAY_CLEAR+0x46>
 102:	00 c0       	rjmp	.+0      	; 0x104 <LCD_DISPLAY_CLEAR+0x4c>
 104:	00 00       	nop
 106:	08 95       	ret

00000108 <LCD_ENTRY_MODE>:
 108:	e0 91 02 01 	lds	r30, 0x0102	; 0x800102 <RSW>
 10c:	f0 91 03 01 	lds	r31, 0x0103	; 0x800103 <RSW+0x1>
 110:	10 82       	st	Z, r1
 112:	00 00       	nop
 114:	e0 91 02 01 	lds	r30, 0x0102	; 0x800102 <RSW>
 118:	f0 91 03 01 	lds	r31, 0x0103	; 0x800103 <RSW+0x1>
 11c:	21 e0       	ldi	r18, 0x01	; 1
 11e:	20 83       	st	Z, r18
 120:	00 00       	nop
 122:	00 00       	nop
 124:	00 00       	nop
 126:	e0 91 00 01 	lds	r30, 0x0100	; 0x800100 <DATA>
 12a:	f0 91 01 01 	lds	r31, 0x0101	; 0x800101 <DATA+0x1>
 12e:	88 0f       	add	r24, r24
 130:	99 1f       	adc	r25, r25
 132:	64 60       	ori	r22, 0x04	; 4
 134:	86 2b       	or	r24, r22
 136:	80 83       	st	Z, r24
 138:	00 00       	nop
 13a:	00 00       	nop
 13c:	e0 91 02 01 	lds	r30, 0x0102	; 0x800102 <RSW>
 140:	f0 91 03 01 	lds	r31, 0x0103	; 0x800103 <RSW+0x1>
 144:	10 82       	st	Z, r1
 146:	00 00       	nop
 148:	e0 91 00 01 	lds	r30, 0x0100	; 0x800100 <DATA>
 14c:	f0 91 01 01 	lds	r31, 0x0101	; 0x800101 <DATA+0x1>
 150:	10 82       	st	Z, r1
 152:	08 95       	ret

00000154 <LCD_DISPLAY_CONTROL>:
 154:	e0 91 02 01 	lds	r30, 0x0102	; 0x800102 <RSW>
 158:	f0 91 03 01 	lds	r31, 0x0103	; 0x800103 <RSW+0x1>
 15c:	10 82       	st	Z, r1
 15e:	00 00       	nop
 160:	e0 91 02 01 	lds	r30, 0x0102	; 0x800102 <RSW>
 164:	f0 91 03 01 	lds	r31, 0x0103	; 0x800103 <RSW+0x1>
 168:	21 e0       	ldi	r18, 0x01	; 1
 16a:	20 83       	st	Z, r18
 16c:	00 00       	nop
 16e:	00 00       	nop
 170:	00 00       	nop
 172:	e0 91 00 01 	lds	r30, 0x0100	; 0x800100 <DATA>
 176:	f0 91 01 01 	lds	r31, 0x0101	; 0x800101 <DATA+0x1>
 17a:	88 0f       	add	r24, r24
 17c:	99 1f       	adc	r25, r25
 17e:	88 0f       	add	r24, r24
 180:	99 1f       	adc	r25, r25
 182:	48 2b       	or	r20, r24
 184:	48 60       	ori	r20, 0x08	; 8
 186:	66 0f       	add	r22, r22
 188:	77 1f       	adc	r23, r23
 18a:	64 2b       	or	r22, r20
 18c:	60 83       	st	Z, r22
 18e:	00 00       	nop
 190:	00 00       	nop
 192:	e0 91 02 01 	lds	r30, 0x0102	; 0x800102 <RSW>
 196:	f0 91 03 01 	lds	r31, 0x0103	; 0x800103 <RSW+0x1>
 19a:	10 82       	st	Z, r1
 19c:	00 00       	nop
 19e:	e0 91 00 01 	lds	r30, 0x0100	; 0x800100 <DATA>
 1a2:	f0 91 01 01 	lds	r31, 0x0101	; 0x800101 <DATA+0x1>
 1a6:	10 82       	st	Z, r1
 1a8:	08 95       	ret

000001aa <LCD_FUNCTION_SET>:
 1aa:	e0 91 02 01 	lds	r30, 0x0102	; 0x800102 <RSW>
 1ae:	f0 91 03 01 	lds	r31, 0x0103	; 0x800103 <RSW+0x1>
 1b2:	10 82       	st	Z, r1
 1b4:	00 00       	nop
 1b6:	e0 91 02 01 	lds	r30, 0x0102	; 0x800102 <RSW>
 1ba:	f0 91 03 01 	lds	r31, 0x0103	; 0x800103 <RSW+0x1>
 1be:	21 e0       	ldi	r18, 0x01	; 1
 1c0:	20 83       	st	Z, r18
 1c2:	00 00       	nop
 1c4:	00 00       	nop
 1c6:	00 00       	nop
 1c8:	e0 91 00 01 	lds	r30, 0x0100	; 0x800100 <DATA>
 1cc:	f0 91 01 01 	lds	r31, 0x0101	; 0x800101 <DATA+0x1>
 1d0:	82 95       	swap	r24
 1d2:	92 95       	swap	r25
 1d4:	90 7f       	andi	r25, 0xF0	; 240
 1d6:	98 27       	eor	r25, r24
 1d8:	80 7f       	andi	r24, 0xF0	; 240
 1da:	98 27       	eor	r25, r24
 1dc:	80 62       	ori	r24, 0x20	; 32
 1de:	66 0f       	add	r22, r22
 1e0:	77 1f       	adc	r23, r23
 1e2:	66 0f       	add	r22, r22
 1e4:	77 1f       	adc	r23, r23
 1e6:	66 0f       	add	r22, r22
 1e8:	77 1f       	adc	r23, r23
 1ea:	68 2b       	or	r22, r24
 1ec:	44 0f       	add	r20, r20
 1ee:	55 1f       	adc	r21, r21
 1f0:	44 0f       	add	r20, r20
 1f2:	55 1f       	adc	r21, r21
 1f4:	46 2b       	or	r20, r22
 1f6:	40 83       	st	Z, r20
 1f8:	00 00       	nop
 1fa:	00 00       	nop
 1fc:	e0 91 02 01 	lds	r30, 0x0102	; 0x800102 <RSW>
 200:	f0 91 03 01 	lds	r31, 0x0103	; 0x800103 <RSW+0x1>
 204:	10 82       	st	Z, r1
 206:	00 00       	nop
 208:	e0 91 00 01 	lds	r30, 0x0100	; 0x800100 <DATA>
 20c:	f0 91 01 01 	lds	r31, 0x0101	; 0x800101 <DATA+0x1>
 210:	10 82       	st	Z, r1
 212:	08 95       	ret

00000214 <LCD_WRITE_DATA>:
 214:	e0 91 02 01 	lds	r30, 0x0102	; 0x800102 <RSW>
 218:	f0 91 03 01 	lds	r31, 0x0103	; 0x800103 <RSW+0x1>
 21c:	96 2f       	mov	r25, r22
 21e:	99 0f       	add	r25, r25
 220:	99 0f       	add	r25, r25
 222:	90 83       	st	Z, r25
 224:	00 00       	nop
 226:	e0 91 02 01 	lds	r30, 0x0102	; 0x800102 <RSW>
 22a:	f0 91 03 01 	lds	r31, 0x0103	; 0x800103 <RSW+0x1>
 22e:	66 0f       	add	r22, r22
 230:	77 1f       	adc	r23, r23
 232:	66 0f       	add	r22, r22
 234:	77 1f       	adc	r23, r23
 236:	61 60       	ori	r22, 0x01	; 1
 238:	60 83       	st	Z, r22
 23a:	00 00       	nop
 23c:	00 00       	nop
 23e:	00 00       	nop
 240:	e0 91 00 01 	lds	r30, 0x0100	; 0x800100 <DATA>
 244:	f0 91 01 01 	lds	r31, 0x0101	; 0x800101 <DATA+0x1>
 248:	80 83       	st	Z, r24
 24a:	00 00       	nop
 24c:	00 00       	nop
 24e:	e0 91 02 01 	lds	r30, 0x0102	; 0x800102 <RSW>
 252:	f0 91 03 01 	lds	r31, 0x0103	; 0x800103 <RSW+0x1>
 256:	10 82       	st	Z, r1
 258:	00 00       	nop
 25a:	e0 91 00 01 	lds	r30, 0x0100	; 0x800100 <DATA>
 25e:	f0 91 01 01 	lds	r31, 0x0101	; 0x800101 <DATA+0x1>
 262:	10 82       	st	Z, r1
 264:	08 95       	ret

00000266 <LCD_Init>:
 266:	40 e0       	ldi	r20, 0x00	; 0
 268:	50 e0       	ldi	r21, 0x00	; 0
 26a:	61 e0       	ldi	r22, 0x01	; 1
 26c:	70 e0       	ldi	r23, 0x00	; 0
 26e:	81 e0       	ldi	r24, 0x01	; 1
 270:	90 e0       	ldi	r25, 0x00	; 0
 272:	9b df       	rcall	.-202    	; 0x1aa <LCD_FUNCTION_SET>
 274:	83 ef       	ldi	r24, 0xF3	; 243
 276:	91 e0       	ldi	r25, 0x01	; 1
 278:	01 97       	sbiw	r24, 0x01	; 1
 27a:	f1 f7       	brne	.-4      	; 0x278 <LCD_Init+0x12>
 27c:	00 c0       	rjmp	.+0      	; 0x27e <LCD_Init+0x18>
 27e:	00 00       	nop
 280:	40 e0       	ldi	r20, 0x00	; 0
 282:	50 e0       	ldi	r21, 0x00	; 0
 284:	60 e0       	ldi	r22, 0x00	; 0
 286:	70 e0       	ldi	r23, 0x00	; 0
 288:	81 e0       	ldi	r24, 0x01	; 1
 28a:	90 e0       	ldi	r25, 0x00	; 0
 28c:	63 df       	rcall	.-314    	; 0x154 <LCD_DISPLAY_CONTROL>
 28e:	83 ef       	ldi	r24, 0xF3	; 243
 290:	91 e0       	ldi	r25, 0x01	; 1
 292:	01 97       	sbiw	r24, 0x01	; 1
 294:	f1 f7       	brne	.-4      	; 0x292 <LCD_Init+0x2c>
 296:	00 c0       	rjmp	.+0      	; 0x298 <LCD_Init+0x32>
 298:	00 00       	nop
 29a:	0e df       	rcall	.-484    	; 0xb8 <LCD_DISPLAY_CLEAR>
 29c:	83 ef       	ldi	r24, 0xF3	; 243
 29e:	91 e0       	ldi	r25, 0x01	; 1
 2a0:	01 97       	sbiw	r24, 0x01	; 1
 2a2:	f1 f7       	brne	.-4      	; 0x2a0 <LCD_Init+0x3a>
 2a4:	00 c0       	rjmp	.+0      	; 0x2a6 <LCD_Init+0x40>
 2a6:	00 00       	nop
 2a8:	60 e0       	ldi	r22, 0x00	; 0
 2aa:	70 e0       	ldi	r23, 0x00	; 0
 2ac:	81 e0       	ldi	r24, 0x01	; 1
 2ae:	90 e0       	ldi	r25, 0x00	; 0
 2b0:	2b df       	rcall	.-426    	; 0x108 <LCD_ENTRY_MODE>
 2b2:	83 ef       	ldi	r24, 0xF3	; 243
 2b4:	91 e0       	ldi	r25, 0x01	; 1
 2b6:	01 97       	sbiw	r24, 0x01	; 1
 2b8:	f1 f7       	brne	.-4      	; 0x2b6 <LCD_Init+0x50>
 2ba:	00 c0       	rjmp	.+0      	; 0x2bc <LCD_Init+0x56>
 2bc:	00 00       	nop
 2be:	08 95       	ret

000002c0 <LCD_WRITE_CHAR>:

void LCD_WRITE_CHAR(unsigned char Data)
{
	LCD_WRITE_DATA(Data, 1);
 2c0:	61 e0       	ldi	r22, 0x01	; 1
 2c2:	70 e0       	ldi	r23, 0x00	; 0
 2c4:	a7 df       	rcall	.-178    	; 0x214 <LCD_WRITE_DATA>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 2c6:	89 ef       	ldi	r24, 0xF9	; 249
 2c8:	90 e0       	ldi	r25, 0x00	; 0
 2ca:	01 97       	sbiw	r24, 0x01	; 1
 2cc:	f1 f7       	brne	.-4      	; 0x2ca <LCD_WRITE_CHAR+0xa>
 2ce:	00 c0       	rjmp	.+0      	; 0x2d0 <LCD_WRITE_CHAR+0x10>
 2d0:	00 00       	nop
 2d2:	08 95       	ret

000002d4 <LCD_WRITE_STR>:
	_delay_ms(1);
}

void LCD_WRITE_STR(unsigned char *STR)
{
 2d4:	cf 93       	push	r28
 2d6:	df 93       	push	r29
 2d8:	ec 01       	movw	r28, r24
	while (*STR != 0)
 2da:	88 81       	ld	r24, Y
 2dc:	88 23       	and	r24, r24
 2de:	29 f0       	breq	.+10     	; 0x2ea <LCD_WRITE_STR+0x16>
	{
		LCD_WRITE_CHAR(*STR);
 2e0:	21 96       	adiw	r28, 0x01	; 1
	_delay_ms(1);
}

void LCD_WRITE_STR(unsigned char *STR)
{
	while (*STR != 0)
 2e2:	ee df       	rcall	.-36     	; 0x2c0 <LCD_WRITE_CHAR>
 2e4:	89 91       	ld	r24, Y+
 2e6:	81 11       	cpse	r24, r1
	{
		LCD_WRITE_CHAR(*STR);
		++STR;
	}
}
 2e8:	fc cf       	rjmp	.-8      	; 0x2e2 <LCD_WRITE_STR+0xe>
 2ea:	df 91       	pop	r29
 2ec:	cf 91       	pop	r28
 2ee:	08 95       	ret

000002f0 <LCD_POS>:

void LCD_POS(unsigned char col, unsigned char row)
{
	LCD_WRITE_DATA(0x80 | (row + col * 0x40), 0);
 2f0:	90 e4       	ldi	r25, 0x40	; 64
 2f2:	89 9f       	mul	r24, r25
 2f4:	60 0d       	add	r22, r0
 2f6:	11 24       	eor	r1, r1
 2f8:	86 2f       	mov	r24, r22
 2fa:	60 e0       	ldi	r22, 0x00	; 0
 2fc:	70 e0       	ldi	r23, 0x00	; 0
 2fe:	80 68       	ori	r24, 0x80	; 128
 300:	89 cf       	rjmp	.-238    	; 0x214 <LCD_WRITE_DATA>
 302:	08 95       	ret

00000304 <USART_1_Transmit>:
	_delay_ms(2);
	LCD_WRITE_STR("Master_Repeater");
	_delay_ms(2);
	LCD_POS(1, 0);
	_delay_ms(2);
	LCD_WRITE_STR("MASTER");
 304:	eb e9       	ldi	r30, 0x9B	; 155
 306:	f0 e0       	ldi	r31, 0x00	; 0
 308:	90 81       	ld	r25, Z
 30a:	95 ff       	sbrs	r25, 5
 30c:	fd cf       	rjmp	.-6      	; 0x308 <USART_1_Transmit+0x4>
 30e:	80 93 9c 00 	sts	0x009C, r24	; 0x80009c <__TEXT_REGION_LENGTH__+0x7e009c>
 312:	08 95       	ret

00000314 <USART_1_Transmit_STR>:
 314:	cf 93       	push	r28
 316:	df 93       	push	r29
 318:	ec 01       	movw	r28, r24
 31a:	88 81       	ld	r24, Y
 31c:	88 23       	and	r24, r24
 31e:	31 f0       	breq	.+12     	; 0x32c <USART_1_Transmit_STR+0x18>
 320:	21 96       	adiw	r28, 0x01	; 1
 322:	90 e0       	ldi	r25, 0x00	; 0
 324:	ef df       	rcall	.-34     	; 0x304 <USART_1_Transmit>
 326:	89 91       	ld	r24, Y+
 328:	81 11       	cpse	r24, r1
 32a:	fb cf       	rjmp	.-10     	; 0x322 <USART_1_Transmit_STR+0xe>
 32c:	c4 e0       	ldi	r28, 0x04	; 4
 32e:	d1 e0       	ldi	r29, 0x01	; 1
 330:	88 81       	ld	r24, Y
 332:	90 e0       	ldi	r25, 0x00	; 0
 334:	e7 df       	rcall	.-50     	; 0x304 <USART_1_Transmit>
 336:	89 81       	ldd	r24, Y+1	; 0x01
 338:	90 e0       	ldi	r25, 0x00	; 0
 33a:	e4 df       	rcall	.-56     	; 0x304 <USART_1_Transmit>
 33c:	df 91       	pop	r29
 33e:	cf 91       	pop	r28
 340:	08 95       	ret

00000342 <USART_1_Transmit_SR>:
 342:	cf 93       	push	r28
 344:	df 93       	push	r29
 346:	ec 01       	movw	r28, r24
 348:	88 81       	ld	r24, Y
 34a:	88 23       	and	r24, r24
 34c:	31 f0       	breq	.+12     	; 0x35a <USART_1_Transmit_SR+0x18>
 34e:	21 96       	adiw	r28, 0x01	; 1
 350:	90 e0       	ldi	r25, 0x00	; 0
 352:	d8 df       	rcall	.-80     	; 0x304 <USART_1_Transmit>
 354:	89 91       	ld	r24, Y+
 356:	81 11       	cpse	r24, r1
 358:	fb cf       	rjmp	.-10     	; 0x350 <USART_1_Transmit_SR+0xe>
 35a:	df 91       	pop	r29
 35c:	cf 91       	pop	r28
 35e:	08 95       	ret

00000360 <USART_1_Receive>:
 360:	eb e9       	ldi	r30, 0x9B	; 155
 362:	f0 e0       	ldi	r31, 0x00	; 0
 364:	80 81       	ld	r24, Z
 366:	88 23       	and	r24, r24
 368:	ec f7       	brge	.-6      	; 0x364 <USART_1_Receive+0x4>
 36a:	80 91 9c 00 	lds	r24, 0x009C	; 0x80009c <__TEXT_REGION_LENGTH__+0x7e009c>
 36e:	08 95       	ret

00000370 <USART_1_Receive_STR>:
 370:	0f 93       	push	r16
 372:	1f 93       	push	r17
 374:	cf 93       	push	r28
 376:	df 93       	push	r29
 378:	08 2f       	mov	r16, r24
 37a:	19 2f       	mov	r17, r25
 37c:	f1 df       	rcall	.-30     	; 0x360 <USART_1_Receive>
 37e:	8d 30       	cpi	r24, 0x0D	; 13
 380:	e9 f7       	brne	.-6      	; 0x37c <USART_1_Receive_STR+0xc>
 382:	ee df       	rcall	.-36     	; 0x360 <USART_1_Receive>
 384:	8a 30       	cpi	r24, 0x0A	; 10
 386:	e9 f7       	brne	.-6      	; 0x382 <USART_1_Receive_STR+0x12>
 388:	eb df       	rcall	.-42     	; 0x360 <USART_1_Receive>
 38a:	8d 30       	cpi	r24, 0x0D	; 13
 38c:	e9 f7       	brne	.-6      	; 0x388 <USART_1_Receive_STR+0x18>
 38e:	e8 df       	rcall	.-48     	; 0x360 <USART_1_Receive>
 390:	8a 30       	cpi	r24, 0x0A	; 10
 392:	e9 f7       	brne	.-6      	; 0x38e <USART_1_Receive_STR+0x1e>
 394:	c0 2f       	mov	r28, r16
 396:	d1 2f       	mov	r29, r17
 398:	8e 01       	movw	r16, r28
 39a:	e2 df       	rcall	.-60     	; 0x360 <USART_1_Receive>
 39c:	89 93       	st	Y+, r24
 39e:	8d 30       	cpi	r24, 0x0D	; 13
 3a0:	d9 f7       	brne	.-10     	; 0x398 <USART_1_Receive_STR+0x28>
 3a2:	f8 01       	movw	r30, r16
 3a4:	10 82       	st	Z, r1
 3a6:	df 91       	pop	r29
 3a8:	cf 91       	pop	r28
 3aa:	1f 91       	pop	r17
 3ac:	0f 91       	pop	r16
 3ae:	08 95       	ret

000003b0 <USART_1_Receive_SR>:
 3b0:	0f 93       	push	r16
 3b2:	1f 93       	push	r17
 3b4:	cf 93       	push	r28
 3b6:	df 93       	push	r29
 3b8:	08 2f       	mov	r16, r24
 3ba:	19 2f       	mov	r17, r25
 3bc:	d1 df       	rcall	.-94     	; 0x360 <USART_1_Receive>
 3be:	8d 30       	cpi	r24, 0x0D	; 13
 3c0:	e9 f7       	brne	.-6      	; 0x3bc <USART_1_Receive_SR+0xc>
 3c2:	ce df       	rcall	.-100    	; 0x360 <USART_1_Receive>
 3c4:	8a 30       	cpi	r24, 0x0A	; 10
 3c6:	e9 f7       	brne	.-6      	; 0x3c2 <USART_1_Receive_SR+0x12>
 3c8:	cb df       	rcall	.-106    	; 0x360 <USART_1_Receive>
 3ca:	8d 30       	cpi	r24, 0x0D	; 13
 3cc:	e9 f7       	brne	.-6      	; 0x3c8 <USART_1_Receive_SR+0x18>
 3ce:	c8 df       	rcall	.-112    	; 0x360 <USART_1_Receive>
 3d0:	8a 30       	cpi	r24, 0x0A	; 10
 3d2:	e9 f7       	brne	.-6      	; 0x3ce <USART_1_Receive_SR+0x1e>
 3d4:	c5 df       	rcall	.-118    	; 0x360 <USART_1_Receive>
 3d6:	8d 30       	cpi	r24, 0x0D	; 13
 3d8:	e9 f7       	brne	.-6      	; 0x3d4 <USART_1_Receive_SR+0x24>
 3da:	c2 df       	rcall	.-124    	; 0x360 <USART_1_Receive>
 3dc:	8a 30       	cpi	r24, 0x0A	; 10
 3de:	e9 f7       	brne	.-6      	; 0x3da <USART_1_Receive_SR+0x2a>
 3e0:	c0 2f       	mov	r28, r16
 3e2:	d1 2f       	mov	r29, r17
 3e4:	8e 01       	movw	r16, r28
 3e6:	bc df       	rcall	.-136    	; 0x360 <USART_1_Receive>
 3e8:	89 93       	st	Y+, r24
 3ea:	8d 30       	cpi	r24, 0x0D	; 13
 3ec:	d9 f7       	brne	.-10     	; 0x3e4 <USART_1_Receive_SR+0x34>
 3ee:	f8 01       	movw	r30, r16
 3f0:	10 82       	st	Z, r1
 3f2:	df 91       	pop	r29
 3f4:	cf 91       	pop	r28
 3f6:	1f 91       	pop	r17
 3f8:	0f 91       	pop	r16
 3fa:	08 95       	ret

000003fc <USART_1_WIFI>:
 3fc:	0f 93       	push	r16
 3fe:	1f 93       	push	r17
 400:	cf 93       	push	r28
 402:	df 93       	push	r29
 404:	08 2f       	mov	r16, r24
 406:	19 2f       	mov	r17, r25
 408:	ab df       	rcall	.-170    	; 0x360 <USART_1_Receive>
 40a:	8d 30       	cpi	r24, 0x0D	; 13
 40c:	e9 f7       	brne	.-6      	; 0x408 <__LOCK_REGION_LENGTH__+0x8>
 40e:	a8 df       	rcall	.-176    	; 0x360 <USART_1_Receive>
 410:	8a 30       	cpi	r24, 0x0A	; 10
 412:	e9 f7       	brne	.-6      	; 0x40e <__LOCK_REGION_LENGTH__+0xe>
 414:	a5 df       	rcall	.-182    	; 0x360 <USART_1_Receive>
 416:	8d 30       	cpi	r24, 0x0D	; 13
 418:	e9 f7       	brne	.-6      	; 0x414 <__LOCK_REGION_LENGTH__+0x14>
 41a:	a2 df       	rcall	.-188    	; 0x360 <USART_1_Receive>
 41c:	8a 30       	cpi	r24, 0x0A	; 10
 41e:	e9 f7       	brne	.-6      	; 0x41a <__LOCK_REGION_LENGTH__+0x1a>
 420:	c0 2f       	mov	r28, r16
 422:	d1 2f       	mov	r29, r17
 424:	8e 01       	movw	r16, r28
 426:	9c df       	rcall	.-200    	; 0x360 <USART_1_Receive>
 428:	89 93       	st	Y+, r24
 42a:	8d 30       	cpi	r24, 0x0D	; 13
 42c:	d9 f7       	brne	.-10     	; 0x424 <__LOCK_REGION_LENGTH__+0x24>
 42e:	f8 01       	movw	r30, r16
 430:	10 82       	st	Z, r1
 432:	df 91       	pop	r29
 434:	cf 91       	pop	r28
 436:	1f 91       	pop	r17
 438:	0f 91       	pop	r16
 43a:	08 95       	ret

0000043c <USART_1_A>:
 43c:	cf 93       	push	r28
 43e:	df 93       	push	r29
 440:	ec 01       	movw	r28, r24
 442:	8e df       	rcall	.-228    	; 0x360 <USART_1_Receive>
 444:	8d 30       	cpi	r24, 0x0D	; 13
 446:	e9 f7       	brne	.-6      	; 0x442 <USART_1_A+0x6>
 448:	8b df       	rcall	.-234    	; 0x360 <USART_1_Receive>
 44a:	8a 30       	cpi	r24, 0x0A	; 10
 44c:	e9 f7       	brne	.-6      	; 0x448 <USART_1_A+0xc>
 44e:	88 df       	rcall	.-240    	; 0x360 <USART_1_Receive>
 450:	8d 30       	cpi	r24, 0x0D	; 13
 452:	e9 f7       	brne	.-6      	; 0x44e <USART_1_A+0x12>
 454:	19 82       	std	Y+1, r1	; 0x01
 456:	df 91       	pop	r29
 458:	cf 91       	pop	r28
 45a:	08 95       	ret

0000045c <PORT_set>:
 45c:	87 e0       	ldi	r24, 0x07	; 7
 45e:	80 93 64 00 	sts	0x0064, r24	; 0x800064 <__TEXT_REGION_LENGTH__+0x7e0064>
 462:	9f ef       	ldi	r25, 0xFF	; 255
 464:	9a bb       	out	0x1a, r25	; 26
 466:	82 b9       	out	0x02, r24	; 2
 468:	08 95       	ret

0000046a <UART_Init>:
 46a:	10 92 98 00 	sts	0x0098, r1	; 0x800098 <__TEXT_REGION_LENGTH__+0x7e0098>
 46e:	88 e0       	ldi	r24, 0x08	; 8
 470:	80 93 99 00 	sts	0x0099, r24	; 0x800099 <__TEXT_REGION_LENGTH__+0x7e0099>
 474:	98 e1       	ldi	r25, 0x18	; 24
 476:	90 93 9a 00 	sts	0x009A, r25	; 0x80009a <__TEXT_REGION_LENGTH__+0x7e009a>
 47a:	86 e0       	ldi	r24, 0x06	; 6
 47c:	80 93 9d 00 	sts	0x009D, r24	; 0x80009d <__TEXT_REGION_LENGTH__+0x7e009d>
 480:	10 92 90 00 	sts	0x0090, r1	; 0x800090 <__TEXT_REGION_LENGTH__+0x7e0090>
 484:	23 e3       	ldi	r18, 0x33	; 51
 486:	29 b9       	out	0x09, r18	; 9
 488:	9a b9       	out	0x0a, r25	; 10
 48a:	80 93 95 00 	sts	0x0095, r24	; 0x800095 <__TEXT_REGION_LENGTH__+0x7e0095>
 48e:	08 95       	ret

00000490 <Loading>:
 490:	0f 93       	push	r16
 492:	1f 93       	push	r17
 494:	cf 93       	push	r28
 496:	df 93       	push	r29
 498:	cd b7       	in	r28, 0x3d	; 61
 49a:	de b7       	in	r29, 0x3e	; 62
 49c:	c6 59       	subi	r28, 0x96	; 150
 49e:	d1 09       	sbc	r29, r1
 4a0:	0f b6       	in	r0, 0x3f	; 63
 4a2:	f8 94       	cli
 4a4:	de bf       	out	0x3e, r29	; 62
 4a6:	0f be       	out	0x3f, r0	; 63
 4a8:	cd bf       	out	0x3d, r28	; 61
 4aa:	2f e3       	ldi	r18, 0x3F	; 63
 4ac:	8d e0       	ldi	r24, 0x0D	; 13
 4ae:	93 e0       	ldi	r25, 0x03	; 3
 4b0:	21 50       	subi	r18, 0x01	; 1
 4b2:	80 40       	sbci	r24, 0x00	; 0
 4b4:	90 40       	sbci	r25, 0x00	; 0
 4b6:	e1 f7       	brne	.-8      	; 0x4b0 <Loading+0x20>
 4b8:	00 c0       	rjmp	.+0      	; 0x4ba <Loading+0x2a>
 4ba:	00 00       	nop
 4bc:	82 e3       	ldi	r24, 0x32	; 50
 4be:	8e 01       	movw	r16, r28
 4c0:	0f 5f       	subi	r16, 0xFF	; 255
 4c2:	1f 4f       	sbci	r17, 0xFF	; 255
 4c4:	d8 01       	movw	r26, r16
 4c6:	e8 2f       	mov	r30, r24
 4c8:	1d 92       	st	X+, r1
 4ca:	ea 95       	dec	r30
 4cc:	e9 f7       	brne	.-6      	; 0x4c8 <Loading+0x38>
 4ce:	fe 01       	movw	r30, r28
 4d0:	f3 96       	adiw	r30, 0x33	; 51
 4d2:	df 01       	movw	r26, r30
 4d4:	28 2f       	mov	r18, r24
 4d6:	1d 92       	st	X+, r1
 4d8:	2a 95       	dec	r18
 4da:	e9 f7       	brne	.-6      	; 0x4d6 <Loading+0x46>
 4dc:	f2 96       	adiw	r30, 0x32	; 50
 4de:	df 01       	movw	r26, r30
 4e0:	1d 92       	st	X+, r1
 4e2:	8a 95       	dec	r24
 4e4:	e9 f7       	brne	.-6      	; 0x4e0 <Loading+0x50>
 4e6:	85 eb       	ldi	r24, 0xB5	; 181
 4e8:	92 e0       	ldi	r25, 0x02	; 2
 4ea:	f4 de       	rcall	.-536    	; 0x2d4 <LCD_WRITE_STR>
 4ec:	bf e7       	ldi	r27, 0x7F	; 127
 4ee:	e4 e8       	ldi	r30, 0x84	; 132
 4f0:	fe e1       	ldi	r31, 0x1E	; 30
 4f2:	b1 50       	subi	r27, 0x01	; 1
 4f4:	e0 40       	sbci	r30, 0x00	; 0
 4f6:	f0 40       	sbci	r31, 0x00	; 0
 4f8:	e1 f7       	brne	.-8      	; 0x4f2 <Loading+0x62>
 4fa:	00 c0       	rjmp	.+0      	; 0x4fc <Loading+0x6c>
 4fc:	00 00       	nop
 4fe:	60 e0       	ldi	r22, 0x00	; 0
 500:	81 e0       	ldi	r24, 0x01	; 1
 502:	f6 de       	rcall	.-532    	; 0x2f0 <LCD_POS>
 504:	2f e3       	ldi	r18, 0x3F	; 63
 506:	8d e0       	ldi	r24, 0x0D	; 13
 508:	93 e0       	ldi	r25, 0x03	; 3
 50a:	21 50       	subi	r18, 0x01	; 1
 50c:	80 40       	sbci	r24, 0x00	; 0
 50e:	90 40       	sbci	r25, 0x00	; 0
 510:	e1 f7       	brne	.-8      	; 0x50a <Loading+0x7a>
 512:	00 c0       	rjmp	.+0      	; 0x514 <Loading+0x84>
 514:	00 00       	nop
 516:	80 ec       	ldi	r24, 0xC0	; 192
 518:	92 e0       	ldi	r25, 0x02	; 2
 51a:	dc de       	rcall	.-584    	; 0x2d4 <LCD_WRITE_STR>
 51c:	8a ec       	ldi	r24, 0xCA	; 202
 51e:	92 e0       	ldi	r25, 0x02	; 2
 520:	f9 de       	rcall	.-526    	; 0x314 <USART_1_Transmit_STR>
 522:	c8 01       	movw	r24, r16
 524:	25 df       	rcall	.-438    	; 0x370 <USART_1_Receive_STR>
 526:	6f e9       	ldi	r22, 0x9F	; 159
 528:	72 e0       	ldi	r23, 0x02	; 2
 52a:	c8 01       	movw	r24, r16
 52c:	88 d1       	rcall	.+784    	; 0x83e <strcmp>
 52e:	89 2b       	or	r24, r25
 530:	09 f0       	breq	.+2      	; 0x534 <Loading+0xa4>
 532:	4e c0       	rjmp	.+156    	; 0x5d0 <Loading+0x140>
 534:	af e7       	ldi	r26, 0x7F	; 127
 536:	b6 e9       	ldi	r27, 0x96	; 150
 538:	e8 e9       	ldi	r30, 0x98	; 152
 53a:	a1 50       	subi	r26, 0x01	; 1
 53c:	b0 40       	sbci	r27, 0x00	; 0
 53e:	e0 40       	sbci	r30, 0x00	; 0
 540:	e1 f7       	brne	.-8      	; 0x53a <Loading+0xaa>
 542:	00 c0       	rjmp	.+0      	; 0x544 <Loading+0xb4>
 544:	00 00       	nop
 546:	8f e9       	ldi	r24, 0x9F	; 159
 548:	92 e0       	ldi	r25, 0x02	; 2
 54a:	c4 de       	rcall	.-632    	; 0x2d4 <LCD_WRITE_STR>
 54c:	ff e7       	ldi	r31, 0x7F	; 127
 54e:	26 e9       	ldi	r18, 0x96	; 150
 550:	88 e9       	ldi	r24, 0x98	; 152
 552:	f1 50       	subi	r31, 0x01	; 1
 554:	20 40       	sbci	r18, 0x00	; 0
 556:	80 40       	sbci	r24, 0x00	; 0
 558:	e1 f7       	brne	.-8      	; 0x552 <Loading+0xc2>
 55a:	00 c0       	rjmp	.+0      	; 0x55c <Loading+0xcc>
 55c:	00 00       	nop
 55e:	19 82       	std	Y+1, r1	; 0x01
 560:	60 e0       	ldi	r22, 0x00	; 0
 562:	81 e0       	ldi	r24, 0x01	; 1
 564:	c5 de       	rcall	.-630    	; 0x2f0 <LCD_POS>
 566:	9f e3       	ldi	r25, 0x3F	; 63
 568:	ad e0       	ldi	r26, 0x0D	; 13
 56a:	b3 e0       	ldi	r27, 0x03	; 3
 56c:	91 50       	subi	r25, 0x01	; 1
 56e:	a0 40       	sbci	r26, 0x00	; 0
 570:	b0 40       	sbci	r27, 0x00	; 0
 572:	e1 f7       	brne	.-8      	; 0x56c <Loading+0xdc>
 574:	00 c0       	rjmp	.+0      	; 0x576 <Loading+0xe6>
 576:	00 00       	nop
 578:	8d ec       	ldi	r24, 0xCD	; 205
 57a:	92 e0       	ldi	r25, 0x02	; 2
 57c:	ab de       	rcall	.-682    	; 0x2d4 <LCD_WRITE_STR>
 57e:	60 e0       	ldi	r22, 0x00	; 0
 580:	81 e0       	ldi	r24, 0x01	; 1
 582:	b6 de       	rcall	.-660    	; 0x2f0 <LCD_POS>
 584:	ef e3       	ldi	r30, 0x3F	; 63
 586:	fd e0       	ldi	r31, 0x0D	; 13
 588:	23 e0       	ldi	r18, 0x03	; 3
 58a:	e1 50       	subi	r30, 0x01	; 1
 58c:	f0 40       	sbci	r31, 0x00	; 0
 58e:	20 40       	sbci	r18, 0x00	; 0
 590:	e1 f7       	brne	.-8      	; 0x58a <Loading+0xfa>
 592:	00 c0       	rjmp	.+0      	; 0x594 <Loading+0x104>
 594:	00 00       	nop
 596:	8e ed       	ldi	r24, 0xDE	; 222
 598:	92 e0       	ldi	r25, 0x02	; 2
 59a:	9c de       	rcall	.-712    	; 0x2d4 <LCD_WRITE_STR>
 59c:	85 ee       	ldi	r24, 0xE5	; 229
 59e:	92 e0       	ldi	r25, 0x02	; 2
 5a0:	b9 de       	rcall	.-654    	; 0x314 <USART_1_Transmit_STR>
 5a2:	8f e3       	ldi	r24, 0x3F	; 63
 5a4:	92 e4       	ldi	r25, 0x42	; 66
 5a6:	af e0       	ldi	r26, 0x0F	; 15
 5a8:	81 50       	subi	r24, 0x01	; 1
 5aa:	90 40       	sbci	r25, 0x00	; 0
 5ac:	a0 40       	sbci	r26, 0x00	; 0
 5ae:	e1 f7       	brne	.-8      	; 0x5a8 <Loading+0x118>
 5b0:	00 c0       	rjmp	.+0      	; 0x5b2 <Loading+0x122>
 5b2:	00 00       	nop
 5b4:	81 ef       	ldi	r24, 0xF1	; 241
 5b6:	92 e0       	ldi	r25, 0x02	; 2
 5b8:	ad de       	rcall	.-678    	; 0x314 <USART_1_Transmit_STR>
 5ba:	ce 01       	movw	r24, r28
 5bc:	c3 96       	adiw	r24, 0x33	; 51
 5be:	1e df       	rcall	.-452    	; 0x3fc <USART_1_WIFI>
 5c0:	69 e1       	ldi	r22, 0x19	; 25
 5c2:	73 e0       	ldi	r23, 0x03	; 3
 5c4:	ce 01       	movw	r24, r28
 5c6:	c3 96       	adiw	r24, 0x33	; 51
 5c8:	3a d1       	rcall	.+628    	; 0x83e <strcmp>
 5ca:	89 2b       	or	r24, r25
 5cc:	e1 f4       	brne	.+56     	; 0x606 <Loading+0x176>
 5ce:	04 c0       	rjmp	.+8      	; 0x5d8 <Loading+0x148>
 5d0:	8f ea       	ldi	r24, 0xAF	; 175
 5d2:	92 e0       	ldi	r25, 0x02	; 2
 5d4:	7f de       	rcall	.-770    	; 0x2d4 <LCD_WRITE_STR>
 5d6:	ff cf       	rjmp	.-2      	; 0x5d6 <Loading+0x146>
 5d8:	bf e7       	ldi	r27, 0x7F	; 127
 5da:	e6 e9       	ldi	r30, 0x96	; 150
 5dc:	f8 e9       	ldi	r31, 0x98	; 152
 5de:	b1 50       	subi	r27, 0x01	; 1
 5e0:	e0 40       	sbci	r30, 0x00	; 0
 5e2:	f0 40       	sbci	r31, 0x00	; 0
 5e4:	e1 f7       	brne	.-8      	; 0x5de <Loading+0x14e>
 5e6:	00 c0       	rjmp	.+0      	; 0x5e8 <Loading+0x158>
 5e8:	00 00       	nop
 5ea:	85 e2       	ldi	r24, 0x25	; 37
 5ec:	93 e0       	ldi	r25, 0x03	; 3
 5ee:	72 de       	rcall	.-796    	; 0x2d4 <LCD_WRITE_STR>
 5f0:	2f e7       	ldi	r18, 0x7F	; 127
 5f2:	86 e9       	ldi	r24, 0x96	; 150
 5f4:	98 e9       	ldi	r25, 0x98	; 152
 5f6:	21 50       	subi	r18, 0x01	; 1
 5f8:	80 40       	sbci	r24, 0x00	; 0
 5fa:	90 40       	sbci	r25, 0x00	; 0
 5fc:	e1 f7       	brne	.-8      	; 0x5f6 <Loading+0x166>
 5fe:	00 c0       	rjmp	.+0      	; 0x600 <Loading+0x170>
 600:	00 00       	nop
 602:	1b aa       	std	Y+51, r1	; 0x33
 604:	2c c0       	rjmp	.+88     	; 0x65e <Loading+0x1ce>
 606:	6d e2       	ldi	r22, 0x2D	; 45
 608:	73 e0       	ldi	r23, 0x03	; 3
 60a:	ce 01       	movw	r24, r28
 60c:	c3 96       	adiw	r24, 0x33	; 51
 60e:	17 d1       	rcall	.+558    	; 0x83e <strcmp>
 610:	89 2b       	or	r24, r25
 612:	b9 f4       	brne	.+46     	; 0x642 <Loading+0x1b2>
 614:	af e7       	ldi	r26, 0x7F	; 127
 616:	b6 e9       	ldi	r27, 0x96	; 150
 618:	e8 e9       	ldi	r30, 0x98	; 152
 61a:	a1 50       	subi	r26, 0x01	; 1
 61c:	b0 40       	sbci	r27, 0x00	; 0
 61e:	e0 40       	sbci	r30, 0x00	; 0
 620:	e1 f7       	brne	.-8      	; 0x61a <Loading+0x18a>
 622:	00 c0       	rjmp	.+0      	; 0x624 <Loading+0x194>
 624:	00 00       	nop
 626:	85 e2       	ldi	r24, 0x25	; 37
 628:	93 e0       	ldi	r25, 0x03	; 3
 62a:	54 de       	rcall	.-856    	; 0x2d4 <LCD_WRITE_STR>
 62c:	ff e7       	ldi	r31, 0x7F	; 127
 62e:	26 e9       	ldi	r18, 0x96	; 150
 630:	88 e9       	ldi	r24, 0x98	; 152
 632:	f1 50       	subi	r31, 0x01	; 1
 634:	20 40       	sbci	r18, 0x00	; 0
 636:	80 40       	sbci	r24, 0x00	; 0
 638:	e1 f7       	brne	.-8      	; 0x632 <Loading+0x1a2>
 63a:	00 c0       	rjmp	.+0      	; 0x63c <Loading+0x1ac>
 63c:	00 00       	nop
 63e:	1b aa       	std	Y+51, r1	; 0x33
 640:	0e c0       	rjmp	.+28     	; 0x65e <Loading+0x1ce>
 642:	11 de       	rcall	.-990    	; 0x266 <LCD_Init>
 644:	9f e3       	ldi	r25, 0x3F	; 63
 646:	ad e0       	ldi	r26, 0x0D	; 13
 648:	b3 e0       	ldi	r27, 0x03	; 3
 64a:	91 50       	subi	r25, 0x01	; 1
 64c:	a0 40       	sbci	r26, 0x00	; 0
 64e:	b0 40       	sbci	r27, 0x00	; 0
 650:	e1 f7       	brne	.-8      	; 0x64a <Loading+0x1ba>
 652:	00 c0       	rjmp	.+0      	; 0x654 <Loading+0x1c4>
 654:	00 00       	nop
 656:	ce 01       	movw	r24, r28
 658:	c3 96       	adiw	r24, 0x33	; 51
 65a:	3c de       	rcall	.-904    	; 0x2d4 <LCD_WRITE_STR>
 65c:	ff cf       	rjmp	.-2      	; 0x65c <Loading+0x1cc>
 65e:	8c e3       	ldi	r24, 0x3C	; 60
 660:	93 e0       	ldi	r25, 0x03	; 3
 662:	58 de       	rcall	.-848    	; 0x314 <USART_1_Transmit_STR>
 664:	60 e0       	ldi	r22, 0x00	; 0
 666:	81 e0       	ldi	r24, 0x01	; 1
 668:	43 de       	rcall	.-890    	; 0x2f0 <LCD_POS>
 66a:	ef e3       	ldi	r30, 0x3F	; 63
 66c:	fd e0       	ldi	r31, 0x0D	; 13
 66e:	23 e0       	ldi	r18, 0x03	; 3
 670:	e1 50       	subi	r30, 0x01	; 1
 672:	f0 40       	sbci	r31, 0x00	; 0
 674:	20 40       	sbci	r18, 0x00	; 0
 676:	e1 f7       	brne	.-8      	; 0x670 <Loading+0x1e0>
 678:	00 c0       	rjmp	.+0      	; 0x67a <Loading+0x1ea>
 67a:	00 00       	nop
 67c:	8d ec       	ldi	r24, 0xCD	; 205
 67e:	92 e0       	ldi	r25, 0x02	; 2
 680:	29 de       	rcall	.-942    	; 0x2d4 <LCD_WRITE_STR>
 682:	60 e0       	ldi	r22, 0x00	; 0
 684:	81 e0       	ldi	r24, 0x01	; 1
 686:	34 de       	rcall	.-920    	; 0x2f0 <LCD_POS>
 688:	8f e3       	ldi	r24, 0x3F	; 63
 68a:	92 e4       	ldi	r25, 0x42	; 66
 68c:	af e0       	ldi	r26, 0x0F	; 15
 68e:	81 50       	subi	r24, 0x01	; 1
 690:	90 40       	sbci	r25, 0x00	; 0
 692:	a0 40       	sbci	r26, 0x00	; 0
 694:	e1 f7       	brne	.-8      	; 0x68e <Loading+0x1fe>
 696:	00 c0       	rjmp	.+0      	; 0x698 <Loading+0x208>
 698:	00 00       	nop
 69a:	88 e4       	ldi	r24, 0x48	; 72
 69c:	93 e0       	ldi	r25, 0x03	; 3
 69e:	1a de       	rcall	.-972    	; 0x2d4 <LCD_WRITE_STR>
 6a0:	bf e7       	ldi	r27, 0x7F	; 127
 6a2:	e6 e9       	ldi	r30, 0x96	; 150
 6a4:	f8 e9       	ldi	r31, 0x98	; 152
 6a6:	b1 50       	subi	r27, 0x01	; 1
 6a8:	e0 40       	sbci	r30, 0x00	; 0
 6aa:	f0 40       	sbci	r31, 0x00	; 0
 6ac:	e1 f7       	brne	.-8      	; 0x6a6 <Loading+0x216>
 6ae:	00 c0       	rjmp	.+0      	; 0x6b0 <Loading+0x220>
 6b0:	00 00       	nop
 6b2:	81 e5       	ldi	r24, 0x51	; 81
 6b4:	93 e0       	ldi	r25, 0x03	; 3
 6b6:	2e de       	rcall	.-932    	; 0x314 <USART_1_Transmit_STR>
 6b8:	ce 01       	movw	r24, r28
 6ba:	8b 59       	subi	r24, 0x9B	; 155
 6bc:	9f 4f       	sbci	r25, 0xFF	; 255
 6be:	78 de       	rcall	.-784    	; 0x3b0 <USART_1_Receive_SR>
 6c0:	6f e9       	ldi	r22, 0x9F	; 159
 6c2:	72 e0       	ldi	r23, 0x02	; 2
 6c4:	ce 01       	movw	r24, r28
 6c6:	8b 59       	subi	r24, 0x9B	; 155
 6c8:	9f 4f       	sbci	r25, 0xFF	; 255
 6ca:	b9 d0       	rcall	.+370    	; 0x83e <strcmp>
 6cc:	89 2b       	or	r24, r25
 6ce:	09 f0       	breq	.+2      	; 0x6d2 <Loading+0x242>
 6d0:	3b c0       	rjmp	.+118    	; 0x748 <Loading+0x2b8>
 6d2:	2f e7       	ldi	r18, 0x7F	; 127
 6d4:	86 e9       	ldi	r24, 0x96	; 150
 6d6:	98 e9       	ldi	r25, 0x98	; 152
 6d8:	21 50       	subi	r18, 0x01	; 1
 6da:	80 40       	sbci	r24, 0x00	; 0
 6dc:	90 40       	sbci	r25, 0x00	; 0
 6de:	e1 f7       	brne	.-8      	; 0x6d8 <Loading+0x248>
 6e0:	00 c0       	rjmp	.+0      	; 0x6e2 <Loading+0x252>
 6e2:	00 00       	nop
 6e4:	85 e2       	ldi	r24, 0x25	; 37
 6e6:	93 e0       	ldi	r25, 0x03	; 3
 6e8:	f5 dd       	rcall	.-1046   	; 0x2d4 <LCD_WRITE_STR>
 6ea:	af e7       	ldi	r26, 0x7F	; 127
 6ec:	b6 e9       	ldi	r27, 0x96	; 150
 6ee:	e8 e9       	ldi	r30, 0x98	; 152
 6f0:	a1 50       	subi	r26, 0x01	; 1
 6f2:	b0 40       	sbci	r27, 0x00	; 0
 6f4:	e0 40       	sbci	r30, 0x00	; 0
 6f6:	e1 f7       	brne	.-8      	; 0x6f0 <Loading+0x260>
 6f8:	00 c0       	rjmp	.+0      	; 0x6fa <Loading+0x26a>
 6fa:	00 00       	nop
 6fc:	1b aa       	std	Y+51, r1	; 0x33
 6fe:	60 e0       	ldi	r22, 0x00	; 0
 700:	81 e0       	ldi	r24, 0x01	; 1
 702:	f6 dd       	rcall	.-1044   	; 0x2f0 <LCD_POS>
 704:	ff e3       	ldi	r31, 0x3F	; 63
 706:	2d e0       	ldi	r18, 0x0D	; 13
 708:	83 e0       	ldi	r24, 0x03	; 3
 70a:	f1 50       	subi	r31, 0x01	; 1
 70c:	20 40       	sbci	r18, 0x00	; 0
 70e:	80 40       	sbci	r24, 0x00	; 0
 710:	e1 f7       	brne	.-8      	; 0x70a <Loading+0x27a>
 712:	00 c0       	rjmp	.+0      	; 0x714 <Loading+0x284>
 714:	00 00       	nop
 716:	8d ec       	ldi	r24, 0xCD	; 205
 718:	92 e0       	ldi	r25, 0x02	; 2
 71a:	dc dd       	rcall	.-1096   	; 0x2d4 <LCD_WRITE_STR>
 71c:	60 e0       	ldi	r22, 0x00	; 0
 71e:	81 e0       	ldi	r24, 0x01	; 1
 720:	e7 dd       	rcall	.-1074   	; 0x2f0 <LCD_POS>
 722:	9f e7       	ldi	r25, 0x7F	; 127
 724:	a6 e9       	ldi	r26, 0x96	; 150
 726:	b8 e9       	ldi	r27, 0x98	; 152
 728:	91 50       	subi	r25, 0x01	; 1
 72a:	a0 40       	sbci	r26, 0x00	; 0
 72c:	b0 40       	sbci	r27, 0x00	; 0
 72e:	e1 f7       	brne	.-8      	; 0x728 <Loading+0x298>
 730:	00 c0       	rjmp	.+0      	; 0x732 <Loading+0x2a2>
 732:	00 00       	nop
 734:	ef e7       	ldi	r30, 0x7F	; 127
 736:	f6 e9       	ldi	r31, 0x96	; 150
 738:	28 e9       	ldi	r18, 0x98	; 152
 73a:	e1 50       	subi	r30, 0x01	; 1
 73c:	f0 40       	sbci	r31, 0x00	; 0
 73e:	20 40       	sbci	r18, 0x00	; 0
 740:	e1 f7       	brne	.-8      	; 0x73a <Loading+0x2aa>
 742:	00 c0       	rjmp	.+0      	; 0x744 <Loading+0x2b4>
 744:	00 00       	nop
 746:	05 c0       	rjmp	.+10     	; 0x752 <Loading+0x2c2>
 748:	ce 01       	movw	r24, r28
 74a:	8b 59       	subi	r24, 0x9B	; 155
 74c:	9f 4f       	sbci	r25, 0xFF	; 255
 74e:	c2 dd       	rcall	.-1148   	; 0x2d4 <LCD_WRITE_STR>
 750:	ff cf       	rjmp	.-2      	; 0x750 <Loading+0x2c0>
 752:	ca 56       	subi	r28, 0x6A	; 106
 754:	df 4f       	sbci	r29, 0xFF	; 255
 756:	0f b6       	in	r0, 0x3f	; 63
 758:	f8 94       	cli
 75a:	de bf       	out	0x3e, r29	; 62
 75c:	0f be       	out	0x3f, r0	; 63
 75e:	cd bf       	out	0x3d, r28	; 61
 760:	df 91       	pop	r29
 762:	cf 91       	pop	r28
 764:	1f 91       	pop	r17
 766:	0f 91       	pop	r16
 768:	08 95       	ret

0000076a <main>:
}

int main(void)
{
 76a:	cf 93       	push	r28
 76c:	df 93       	push	r29
 76e:	cd b7       	in	r28, 0x3d	; 61
 770:	de b7       	in	r29, 0x3e	; 62
 772:	ca 55       	subi	r28, 0x5A	; 90
 774:	d1 09       	sbc	r29, r1
 776:	0f b6       	in	r0, 0x3f	; 63
 778:	f8 94       	cli
 77a:	de bf       	out	0x3e, r29	; 62
 77c:	0f be       	out	0x3f, r0	; 63
 77e:	cd bf       	out	0x3d, r28	; 61
	
	char a[90] = {0,};
 780:	8e 01       	movw	r16, r28
 782:	0f 5f       	subi	r16, 0xFF	; 255
 784:	1f 4f       	sbci	r17, 0xFF	; 255
 786:	8a e5       	ldi	r24, 0x5A	; 90
 788:	f8 01       	movw	r30, r16
 78a:	11 92       	st	Z+, r1
 78c:	8a 95       	dec	r24
	char b[90] = {0,};
	char c[90] = {0,};
	int num1 = 0, num2 = 0;
	
	UART_Init();
 78e:	e9 f7       	brne	.-6      	; 0x78a <main+0x20>
 790:	6c de       	rcall	.-808    	; 0x46a <UART_Init>
 792:	ff e3       	ldi	r31, 0x3F	; 63
 794:	2d e0       	ldi	r18, 0x0D	; 13
 796:	83 e0       	ldi	r24, 0x03	; 3
 798:	f1 50       	subi	r31, 0x01	; 1
 79a:	20 40       	sbci	r18, 0x00	; 0
 79c:	80 40       	sbci	r24, 0x00	; 0
 79e:	e1 f7       	brne	.-8      	; 0x798 <main+0x2e>
	_delay_ms(1000);
	PORT_set();
 7a0:	00 c0       	rjmp	.+0      	; 0x7a2 <main+0x38>
 7a2:	00 00       	nop
	PORTE = 0x03;
 7a4:	5b de       	rcall	.-842    	; 0x45c <PORT_set>
 7a6:	83 e0       	ldi	r24, 0x03	; 3
 7a8:	83 b9       	out	0x03, r24	; 3
 7aa:	e1 ee       	ldi	r30, 0xE1	; 225
 7ac:	f4 e0       	ldi	r31, 0x04	; 4
	_delay_ms(5);
	LCD_Init();
 7ae:	31 97       	sbiw	r30, 0x01	; 1
	Loading();
 7b0:	f1 f7       	brne	.-4      	; 0x7ae <main+0x44>
 7b2:	00 c0       	rjmp	.+0      	; 0x7b4 <main+0x4a>
	LCD_Init();
 7b4:	00 00       	nop
 7b6:	57 dd       	rcall	.-1362   	; 0x266 <LCD_Init>
 7b8:	6b de       	rcall	.-810    	; 0x490 <Loading>
 7ba:	55 dd       	rcall	.-1366   	; 0x266 <LCD_Init>
 7bc:	ff e3       	ldi	r31, 0x3F	; 63
 7be:	2d e0       	ldi	r18, 0x0D	; 13
 7c0:	83 e0       	ldi	r24, 0x03	; 3
 7c2:	f1 50       	subi	r31, 0x01	; 1
 7c4:	20 40       	sbci	r18, 0x00	; 0
 7c6:	80 40       	sbci	r24, 0x00	; 0
 7c8:	e1 f7       	brne	.-8      	; 0x7c2 <main+0x58>
 7ca:	00 c0       	rjmp	.+0      	; 0x7cc <main+0x62>
 7cc:	00 00       	nop
 7ce:	9f e3       	ldi	r25, 0x3F	; 63
 7d0:	e2 e4       	ldi	r30, 0x42	; 66
 7d2:	ff e0       	ldi	r31, 0x0F	; 15
 7d4:	91 50       	subi	r25, 0x01	; 1
 7d6:	e0 40       	sbci	r30, 0x00	; 0
 7d8:	f0 40       	sbci	r31, 0x00	; 0
 7da:	e1 f7       	brne	.-8      	; 0x7d4 <main+0x6a>
 7dc:	00 c0       	rjmp	.+0      	; 0x7de <main+0x74>
 7de:	00 00       	nop
 7e0:	2f e3       	ldi	r18, 0x3F	; 63
 7e2:	8d e0       	ldi	r24, 0x0D	; 13
 7e4:	93 e0       	ldi	r25, 0x03	; 3
 7e6:	21 50       	subi	r18, 0x01	; 1
 7e8:	80 40       	sbci	r24, 0x00	; 0
 7ea:	90 40       	sbci	r25, 0x00	; 0
	
	_delay_ms(5000);
	//LCD_Init();
	_delay_ms(1000);
	//LCD_WRITE_STR("Sending...");
	USART_1_Transmit_STR("AT+CIPSEND=30");
 7ec:	e1 f7       	brne	.-8      	; 0x7e6 <main+0x7c>
 7ee:	00 c0       	rjmp	.+0      	; 0x7f0 <main+0x86>
 7f0:	00 00       	nop
 7f2:	81 e9       	ldi	r24, 0x91	; 145
 7f4:	93 e0       	ldi	r25, 0x03	; 3
 7f6:	8e dd       	rcall	.-1252   	; 0x314 <USART_1_Transmit_STR>
 7f8:	ef e7       	ldi	r30, 0x7F	; 127
 7fa:	f4 e8       	ldi	r31, 0x84	; 132
 7fc:	2e e1       	ldi	r18, 0x1E	; 30
 7fe:	e1 50       	subi	r30, 0x01	; 1
 800:	f0 40       	sbci	r31, 0x00	; 0
	_delay_ms(10000);
	USART_1_Transmit_SR("GET /waddr/waddr1 HTTP/1.1\r\n\r\n");
 802:	20 40       	sbci	r18, 0x00	; 0
 804:	e1 f7       	brne	.-8      	; 0x7fe <main+0x94>
 806:	00 c0       	rjmp	.+0      	; 0x808 <main+0x9e>
 808:	00 00       	nop
	USART_1_A(a);
 80a:	8f e9       	ldi	r24, 0x9F	; 159
 80c:	93 e0       	ldi	r25, 0x03	; 3
 80e:	99 dd       	rcall	.-1230   	; 0x342 <USART_1_Transmit_SR>
 810:	c8 01       	movw	r24, r16
 812:	14 de       	rcall	.-984    	; 0x43c <USART_1_A>
 814:	8f e3       	ldi	r24, 0x3F	; 63
 816:	9d e0       	ldi	r25, 0x0D	; 13
 818:	e3 e0       	ldi	r30, 0x03	; 3
 81a:	81 50       	subi	r24, 0x01	; 1
 81c:	90 40       	sbci	r25, 0x00	; 0
 81e:	e0 40       	sbci	r30, 0x00	; 0
 820:	e1 f7       	brne	.-8      	; 0x81a <main+0xb0>
 822:	00 c0       	rjmp	.+0      	; 0x824 <main+0xba>
 824:	00 00       	nop
 826:	ff e3       	ldi	r31, 0x3F	; 63
 828:	2d e0       	ldi	r18, 0x0D	; 13
 82a:	83 e0       	ldi	r24, 0x03	; 3
 82c:	f1 50       	subi	r31, 0x01	; 1
 82e:	20 40       	sbci	r18, 0x00	; 0
 830:	80 40       	sbci	r24, 0x00	; 0
	_delay_ms(1000);
	//LCD_Init();
	_delay_ms(1000);
	LCD_WRITE_STR(a);
 832:	e1 f7       	brne	.-8      	; 0x82c <main+0xc2>
 834:	00 c0       	rjmp	.+0      	; 0x836 <main+0xcc>
 836:	00 00       	nop
 838:	c8 01       	movw	r24, r16
 83a:	4c dd       	rcall	.-1384   	; 0x2d4 <LCD_WRITE_STR>
 83c:	ff cf       	rjmp	.-2      	; 0x83c <main+0xd2>

0000083e <strcmp>:
 83e:	fb 01       	movw	r30, r22
 840:	dc 01       	movw	r26, r24
 842:	8d 91       	ld	r24, X+
 844:	01 90       	ld	r0, Z+
 846:	80 19       	sub	r24, r0
 848:	01 10       	cpse	r0, r1
 84a:	d9 f3       	breq	.-10     	; 0x842 <strcmp+0x4>
 84c:	99 0b       	sbc	r25, r25
 84e:	08 95       	ret

00000850 <_exit>:
 850:	f8 94       	cli

00000852 <__stop_program>:
 852:	ff cf       	rjmp	.-2      	; 0x852 <__stop_program>
